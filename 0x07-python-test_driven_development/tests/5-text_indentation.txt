============================================================
The 5-text_indentation.py module
============================================================                            

Using ``text_indentation(text) function``

----------
TEST CASES
----------

VALID MULTILINE STRING
======================

``text_indentation(text)`` prints the string and break into new line if it encounters a '.', ':', '?'

::
	>>> indent_text = __import__("5-text_indentation").text_indentation
	>>> text = """ Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
	... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
	... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
	... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
	... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
	... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
	... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
	... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
	... beatiorem! Iam ruinas videres"""
	>>> indent_text(text)
	Lorem ipsum dolor sit amet, consectetur adipiscing elit.
	<BLANKLINE>
	Quonam modo?
	<BLANKLINE>
	Utrum igitur tibi litteram videor an totas paginas commovere?
	<BLANKLINE>
	Non autem hoc:
	<BLANKLINE>
	igitur ne illud quidem.
	<BLANKLINE>
	Fortasse id optimum, sed ubi illud:
	<BLANKLINE>
	Plus semper voluptatis?
	<BLANKLINE>
	Teneo, inquit, finem illi videri nihil dolere.
	<BLANKLINE>
	Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
	<BLANKLINE>
	Si id dicis, vicimus.
	<BLANKLINE>
	Inde sermone vario sex illa a Dipylo stadia confecimus.
	<BLANKLINE>
	Sin aliud quid voles, postea.
	<BLANKLINE>
	Quae animi affectio suum cuique tribuens atque hanc, quam dico.
	<BLANKLINE>
	Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres



VALID INLINE STRING
===================

::
	>>> text = "     Zen of Python       "
	>>> indent_text(text)
	Zen of Python
	>>> text = "  Zen of Python ? "
	>>> indent_text(text)
	Zen of Python ?
	<BLANKLINE> 


INVALID STRING AS INPUT
=======================

`` text_indentation(text) `` raises Type Error if input is not a valid string

::
	>>> indent_text([])
	Traceback (most recent call last):
	TypeError: text must be a string
	>>> indent_text(56)
	Traceback (most recent call last):
	TypeError: text must be a string


EMPTY STRINGS
=============
::
	>>> text = "       "
	>>> indent_text(text)
	>>> text = "   ?      :      ."
	>>> indent_text(text)
	?
	<BLANKLINE>
	:
	<BLANKLINE>
	.
	<BLANKLINE>
	>>> text = ""
	>>> indent_text(text)
	>>>

